* ➊ 虚拟头节点
* 创建「虚拟头节点」作为「结果链表」的开头，返回结果是这个节点的下一个位置。目的是：在未遍历之前，我们不知道构建的结果中，开头元素到底是 L1 还是 L2, 为了让代码整齐，创建「虚拟头节点」。

* ➋ 使用 tempHead 游标
* 「虚拟头节点」标记了「结果链表」的开头，因此是不能移动的。为了把两个链表 merge 的结果放到「结果链表」的最后，就需要使用一个 tempHead 游标指向「结果链表」的最后一个元素。初始时，tempHead 指向 「虚拟头节点」，之后随着「结果链表」的增加而不停地向后移动，始终保持其指向 「结果链表」 的最后一个元素。

* ➌ while 遍历两个元素
* 涉及到两个元素的遍历题，使用 while l1 and/or l2 的方式。即两个元素都没有遍历完或者至少有一个没遍历完，具体使用 and 还是 or 要根据场景进行选择。
* 
* 这类常见的题目有：
* 合并两个链表
* 两数相加/两个链表表示的数相加
? https://leetcode.cn/problems/merge-two-sorted-lists/solution/xin-shou-you-hao-xue-hui-tao-lu-bu-fan-cuo-4nian-l/
    