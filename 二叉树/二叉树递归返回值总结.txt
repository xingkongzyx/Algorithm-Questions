# 递归函数什么时候需要返回值？什么时候不需要返回值？这里总结如下三点：
* 1. 如果需要搜索整棵二叉树且不用处理递归返回值, 递归函数就不要返回值. 113.路径总和ii
/ 113. 路径总和ii 要"找到所有从根节点到叶子节点路径总和等于给定目标和的路径". 所以递归函数不要返回值！

* 2. 如果需要搜索整棵二叉树且需要处理递归返回值, 递归函数就需要返回值.  236. 二叉树的最近公共祖先

* 3. 如果要搜索其中一条符合条件的路径, 那么递归一定需要返回值, 因为遇到符合条件的路径了就要及时返回. 
/ 112. 路径总和i 要找一条符合条件的路径，所以递归函数需要返回值，及时返回

# 如果递归函数有返回值, 如何区分要搜索一条边, 还是搜索整个树呢？
* 搜索一条边的写法：
/*
 if (递归函数(root->left)) return ;
 if (递归函数(root->right)) return ;
*/

* 搜索整个树写法： 
/*
 left = 递归函数(root->left);
 right = 递归函数(root->right);
 left与right的逻辑处理;
*/

! 在递归函数有返回值的情况下：如果要搜索一条边, 递归函数返回值不为空的时候, 立刻返回.

! 如果搜索整个树, 直接用一个变量left、right接住返回值, 这个left、right后序还有逻辑处理的需要, 也就是后序遍历中处理中间节点的逻辑(也是回溯). 